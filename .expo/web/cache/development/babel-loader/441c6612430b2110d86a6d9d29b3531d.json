{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PyRex\\\\Desktop\\\\TY project\\\\frontend\\\\APP\\\\Components\\\\Forms\\\\OTPMODAL.jsx\";\n\nimport React, { useState } from \"react\";\nimport { Button, Modal, FormControl, Center, NativeBaseProvider } from \"native-base\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport config from \"../../../config.json\";\nimport Colors from \"./../../Configs/Colors/Colors\";\n\nvar OtpModal = function OtpModal() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      otp = _useState2[0],\n      setOtp = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      otperr = _useState4[0],\n      setOtpErr = _useState4[1];\n\n  var user_Data = {\n    otp: otp\n  };\n  var log_Setters = {\n    setOtpErr: setOtpErr\n  };\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Button\"), React.createElement(Modal, {\n    isOpen: true,\n    onClose: function onClose() {\n      return setShowModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, React.createElement(Modal.CloseButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, React.createElement(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, React.createElement(FormControl.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Otp\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setOtp(text);\n    },\n    placeholder: \"Enter the OTP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Colors.danger\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, otperr))), React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, React.createElement(Button.Group, {\n    space: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"cancel\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return submit(user_Data, log_Setters);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Save\"))))));\n};\n\nfunction validation(otp) {\n  var result = {};\n  result.is_error = false;\n\n  if (otp == \"\") {\n    result.is_error = true;\n    result.otperr = \"Enter OTP\";\n  } else if (!otp.length == 6 && otp == 1 - 9) {\n    result.is_error = true;\n    result.otperr = \"Enter a valid OTP\";\n  }\n\n  return result;\n}\n\nfunction submit(user_Data, log_Setters) {\n  var result = validation(user_Data);\n  console.log(result);\n\n  if (result.is_error) {\n    log_Setters.setOtpErr(result.otperr);\n  } else {\n    log_Setters.setOtpErr(\"\");\n    setShowModal(false);\n    axios.post(String(config.baseURL) + \"/user/confirm/\", {\n      otp: user_Data.otp,\n      token: token\n    }).then(function (response) {\n      console.log(response.status == 201);\n\n      if (response.status == 201) {\n        Alert.alert(\"signup success\");\n        console.log(response.data);\n      }\n\n      if (response.status == 226) {\n        Alert.alert(\"email already in use\");\n        console.log(response.status, \"email already in use\");\n      }\n\n      if (response.status >= 400 && response.status < 500) {\n        Alert.alert(\"bad request\");\n      }\n    });\n  }\n}\n\nexport default (function () {\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Center, {\n    flex: 1,\n    px: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(OtpModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/PyRex/Desktop/TY project/frontend/APP/Components/Forms/OTPMODAL.jsx"],"names":["React","useState","Button","Modal","FormControl","Center","NativeBaseProvider","config","Colors","OtpModal","otp","setOtp","otperr","setOtpErr","user_Data","log_Setters","setShowModal","text","color","danger","submit","validation","result","is_error","length","console","log","axios","post","String","baseURL","token","then","response","status","Alert","alert","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Button,\n    Modal,\n    FormControl,\n    Center,\n    NativeBaseProvider,\n} from \"native-base\";\nimport { Text, TextInput } from \"react-native\";\n\nimport config from \"../../../config.json\";\nimport Colors from \"./../../Configs/Colors/Colors\";\n\nconst OtpModal = () => {\n    let [otp, setOtp] = useState(\"\");\n    let [otperr, setOtpErr] = useState(\"\");\n\n    let user_Data = { otp };\n    let log_Setters = { setOtpErr };\n\n    return (\n        <NativeBaseProvider>\n            <Button onPress={() => setShowModal(true)}>Button</Button>\n            <Modal isOpen={true} onClose={() => setShowModal(false)}>\n                <Modal.Content maxWidth='400px'>\n                    <Modal.CloseButton />\n                    <Modal.Body>\n                        <FormControl>\n                            <FormControl.Label>Otp</FormControl.Label>\n                            <TextInput\n                                onChangeText={text => setOtp(text)}\n                                placeholder='Enter the OTP'\n                            />\n                            <Text style={{ color: Colors.danger }}>\n                                {otperr}\n                            </Text>\n                        </FormControl>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button.Group space={2}>\n                            <Button variant='ghost' colorScheme='blueGray'>\n                                cancel\n                            </Button>\n                            <Button\n                                onPress={() => submit(user_Data, log_Setters)}\n                            >\n                                Save\n                            </Button>\n                        </Button.Group>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </NativeBaseProvider>\n    );\n};\n\nfunction validation(otp) {\n    let result = {};\n    result.is_error = false;\n    if (otp == \"\") {\n        result.is_error = true;\n        result.otperr = \"Enter OTP\";\n    } else if (!otp.length == 6 && otp == 1 - 9) {\n        result.is_error = true;\n        result.otperr = \"Enter a valid OTP\";\n    }\n    return result;\n}\n\nfunction submit(user_Data, log_Setters) {\n    let result = validation(user_Data);\n    console.log(result);\n    if (result.is_error) {\n        log_Setters.setOtpErr(result.otperr);\n    } else {\n        log_Setters.setOtpErr(\"\");\n        setShowModal(false);\n\n        axios.post(String(config.baseURL) + \"/user/confirm/\", {\n                otp: user_Data.otp,\n                token: token,\n            })\n            .then(function (response) {\n                console.log(response.status == 201);\n                if (response.status == 201) {\n                    Alert.alert(\"signup success\");\n                    console.log(response.data);\n                }\n                if (response.status == 226) {\n                    Alert.alert(\"email already in use\");\n                    console.log(response.status, \"email already in use\");\n                }\n\n                if (response.status >= 400 && response.status < 500) {\n                    Alert.alert(\"bad request\");\n                }\n            });\n    }\n}\n/* () => {\nsetShowModal(false)\n} */\n\nexport default () => {\n    return (\n        <NativeBaseProvider>\n            <Center flex={1} px='3'>\n                <OtpModal />\n            </Center>\n        </NativeBaseProvider>\n    );\n};"]},"metadata":{},"sourceType":"module"}