{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PyRex\\\\Desktop\\\\TY project\\\\frontend\\\\APP\\\\android\\\\components\\\\Forms\\\\Modal.jsx\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-modal\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { mainBackend } from \"../../../Configs/MainBackend\";\nimport Colors from \"../../../Configs/Colors/Colors\";\nimport STYLES from \"../../../Configs/Style/formStyles\";\n\nfunction ModalTester(porps) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      otp = _useState2[0],\n      setOtp = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      otpwarning = _useState4[0],\n      Setotpwarning = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    isVisible: porps.isVisible,\n    style: styles.container,\n    backdropColor: \"white\",\n    backdropOpacity: 0.80,\n    deviceHeight: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2,\n      padding: 400,\n      paddingHorizontal: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setOtp(text);\n    },\n    placeholder: \"Enter the OTP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Colors.danger\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }\n  }, otpwarning), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: STYLES.btnPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      fontSize: 20\n    },\n    onPress: function onPress() {\n      return otpSubmit(otp, Setotpwarning);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }, \"Sign Up\"))))));\n}\n\nfunction otpSubmit(otp, setotpwarning) {\n  if (isNaN(otp)) {\n    setotpwarning(\"please enter valid number\");\n    return;\n  }\n\n  AsyncStorage.getItem(\"signup_token\", function (err, result) {\n    mainBackend.post(\"/user/confirm/\", {\n      token: result,\n      otp: otp\n    }).then(function (response) {\n      switch (response.status) {\n        case 202:\n          alert(\"signup success\");\n          Alert.alert(\"signup success\");\n          break;\n\n        case 410:\n          alert(\"otp time expired try again\");\n          Alert.alert(\"otp time expired try again\");\n\n        case 400:\n          alert(\"oops something went wrong!\");\n          Alert.alert(\"oops something went wrong!\");\n      }\n    });\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 150\n  }\n});\nexport default ModalTester;","map":{"version":3,"sources":["C:/Users/PyRex/Desktop/TY project/frontend/APP/android/components/Forms/Modal.jsx"],"names":["React","useState","Modal","AsyncStorage","mainBackend","Colors","STYLES","ModalTester","porps","otp","setOtp","otpwarning","Setotpwarning","styles","container","isVisible","flex","padding","paddingHorizontal","text","color","danger","btnPrimary","fontWeight","fontSize","otpSubmit","setotpwarning","isNaN","getItem","err","result","post","token","then","response","status","alert","Alert","StyleSheet","create","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport Modal from \"react-native-modal\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport { mainBackend } from \"../../../Configs/MainBackend\";\r\nimport Colors from \"../../../Configs/Colors/Colors\";\r\nimport STYLES from \"../../../Configs/Style/formStyles\";\r\n\r\nfunction ModalTester(porps) {\r\n\r\n\r\n\tlet [otp, setOtp] = useState(\"\");\r\n\tlet [otpwarning, Setotpwarning] = useState(\"\");\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Modal isVisible={porps.isVisible} style={styles.container} backdropColor=\"white\" backdropOpacity={0.80} deviceHeight={100} >\r\n\t\t\t\t<View style={{ flex: 2, padding: 400, paddingHorizontal: 500, }}>\r\n\t\t\t\t\t<TextInput onChangeText={text => setOtp(text)} placeholder='Enter the OTP' />\r\n\t\t\t\t\t<Text style={{ color: Colors.danger }}>{otpwarning}</Text>\r\n\r\n\r\n\t\t\t\t\t<TouchableOpacity>\r\n\t\t\t\t\t\t<View style={STYLES.btnPrimary}>\r\n\t\t\t\t\t\t\t<Text style={{ color: \"#fff\", fontWeight: \"bold\", fontSize: 20, }} onPress={() => otpSubmit(otp, Setotpwarning)}>\r\n\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</Modal>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nfunction otpSubmit(otp, setotpwarning) {\r\n\tif (isNaN(otp)) {\r\n\t\tsetotpwarning(\"please enter valid number\");\r\n\t\treturn;\r\n\t}\r\n\tAsyncStorage.getItem(\"signup_token\", (err, result) => {\r\n\t\tmainBackend\r\n\t\t\t.post(\"/user/confirm/\", { token: result, otp: otp })\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tswitch (response.status) {\r\n\t\t\t\t\tcase 202:\r\n\t\t\t\t\t\talert(\"signup success\");\r\n\t\t\t\t\t\tAlert.alert(\"signup success\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 410:\r\n\t\t\t\t\t\talert(\"otp time expired try again\");\r\n\t\t\t\t\t\tAlert.alert(\"otp time expired try again\");\r\n\t\t\t\t\tcase 400:\r\n\t\t\t\t\t\talert(\"oops something went wrong!\");\r\n\t\t\t\t\t\tAlert.alert(\"oops something went wrong!\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tmarginTop: 150,\r\n\t},\r\n\r\n});\r\nexport default ModalTester;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}