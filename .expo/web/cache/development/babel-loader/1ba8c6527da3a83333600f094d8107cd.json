{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PyRex\\\\Desktop\\\\TY project\\\\frontend\\\\APP\\\\Components\\\\Sub Components\\\\OtpModal.jsx\";\n\nimport React, { useState } from \"react\";\nimport { Button, Modal, FormControl, Input, Center, NativeBaseProvider } from \"native-base\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport config from \"../../../config.json\";\nimport Colors from \"../../Configs/Colors/Colors\";\nexport var OtpModal = function OtpModal() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      otp = _useState4[0],\n      setOtp = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      otperr = _useState6[0],\n      setOtpErr = _useState6[1];\n\n  var user_Data = {\n    otp: otp\n  };\n  var log_Setters = {\n    setOtpErr: setOtpErr\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowModal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"Button\"), React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal.CloseButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }\n  }), React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, React.createElement(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(FormControl.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, \"Otp\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setOtp(text);\n    },\n    placeholder: \"Enter the OTP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: Colors.danger\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }\n  }, otperr))), React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, React.createElement(Button.Group, {\n    space: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    colorScheme: \"blueGray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }, \"cancel\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return submit(user_Data, log_Setters);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }, \"Save\"))))));\n};\n\nfunction validation(otp) {\n  var result = {};\n  result.is_error = false;\n\n  if (otp == \"\") {\n    result.is_error = true;\n    result.otperr = \"Enter OTP\";\n  } else if (!otp.length == 6 && otp == 1 - 9) {\n    result.is_error = true;\n    result.otperr = \"Enter a valid OTP\";\n  }\n\n  return result;\n}\n\nfunction submit(user_Data, log_Setters) {\n  var result = validation(user_Data);\n  console.log(result);\n\n  if (result.is_error) {\n    log_Setters.setOtpErr(result.otperr);\n  } else {\n    log_Setters.setOtpErr(\"\");\n    setShowModal(false);\n    axios.post(String(config.baseURL) + \"/user/confirm/\", {\n      otp: user_Data.otp,\n      token: token\n    }).then(function (response) {\n      console.log(response.status == 201);\n\n      if (response.status == 201) {\n        Alert.alert(\"signup success\");\n        console.log(response.data);\n      }\n\n      if (response.status == 226) {\n        Alert.alert(\"email already in use\");\n        console.log(response.status, \"email already in use\");\n      }\n\n      if (response.status >= 400 && response.status < 500) {\n        Alert.alert(\"bad request\");\n      }\n    });\n  }\n}\n\nexport default (function () {\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }\n  }, React.createElement(Center, {\n    flex: 1,\n    px: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }, React.createElement(OtpModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/PyRex/Desktop/TY project/frontend/APP/Components/Sub Components/OtpModal.jsx"],"names":["React","useState","Button","Modal","FormControl","Input","Center","NativeBaseProvider","config","Colors","OtpModal","showModal","setShowModal","otp","setOtp","otperr","setOtpErr","user_Data","log_Setters","text","color","danger","submit","validation","result","is_error","length","console","log","axios","post","String","baseURL","token","then","response","status","Alert","alert","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n\tButton,\r\n\tModal,\r\n\tFormControl,\r\n\tInput,\r\n\tCenter,\r\n\tNativeBaseProvider,\r\n} from \"native-base\";\r\nimport { Text, TextInput } from \"react-native\"; \r\n\r\nimport config from \"../../../config.json\";\r\nimport Colors from \"../../Configs/Colors/Colors\";\r\n\r\nexport const OtpModal = () => {\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tlet [otp, setOtp] = useState(\"\");\r\n\tlet [otperr, setOtpErr] = useState(\"\");\r\n\r\n\tlet user_Data = { otp };\r\n\tlet log_Setters = { setOtpErr };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onPress={() => setShowModal(true)}>Button</Button>\r\n\t\t\t<Modal isOpen={showModal} onClose={() => setShowModal(false)}>\r\n\t\t\t\t<Modal.Content maxWidth='400px'>\r\n\t\t\t\t\t<Modal.CloseButton />\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<FormControl.Label>Otp</FormControl.Label>\r\n\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\tonChangeText={text => setOtp(text)}\r\n\t\t\t\t\t\t\t\tplaceholder='Enter the OTP'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Text style={{ color: Colors.danger }}>\r\n\t\t\t\t\t\t\t\t{otperr}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button.Group space={2}>\r\n\t\t\t\t\t\t\t<Button variant='ghost' colorScheme='blueGray'>\r\n\t\t\t\t\t\t\t\tcancel\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonPress={() => submit(user_Data, log_Setters)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal.Content>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nfunction validation(otp) {\r\n\tlet result = {};\r\n\tresult.is_error = false;\r\n\tif (otp == \"\") {\r\n\t\tresult.is_error = true;\r\n\t\tresult.otperr = \"Enter OTP\";\r\n\t} else if (!otp.length == 6 && otp == 1 - 9) {\r\n\t\tresult.is_error = true;\r\n\t\tresult.otperr = \"Enter a valid OTP\";\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction submit(user_Data, log_Setters) {\r\n\tlet result = validation(user_Data);\r\n\tconsole.log(result);\r\n\tif (result.is_error) {\r\n\t\tlog_Setters.setOtpErr(result.otperr);\r\n\t} else {\r\n\t\tlog_Setters.setOtpErr(\"\");\r\n\t\tsetShowModal(false);\r\n\r\n\t\taxios.post(String(config.baseURL) + \"/user/confirm/\", {\r\n\t\t\t\totp: user_Data.otp,\r\n\t\t\t\ttoken: token,\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response.status == 201);\r\n\t\t\t\tif (response.status == 201) {\r\n\t\t\t\t\tAlert.alert(\"signup success\");\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t}\r\n\t\t\t\tif (response.status == 226) {\r\n\t\t\t\t\tAlert.alert(\"email already in use\");\r\n\t\t\t\t\tconsole.log(response.status, \"email already in use\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (response.status >= 400 && response.status < 500) {\r\n\t\t\t\t\tAlert.alert(\"bad request\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n/* () => {\r\nsetShowModal(false)\r\n} */\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<NativeBaseProvider>\r\n\t\t\t<Center flex={1} px='3'>\r\n\t\t\t\t<OtpModal />\r\n\t\t\t</Center>\r\n\t\t</NativeBaseProvider>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}