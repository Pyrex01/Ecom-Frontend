{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PyRex\\\\Desktop\\\\TtIT frontend\\\\frontend\\\\APP\\\\android\\\\components\\\\Screens\\\\Profile\\\\Address.jsx\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Colors from \"../../../../Configs/Colors/Colors\";\nimport AddressStyle from \"../../../../Configs/Style/AddressStyle\";\nimport ProfileStyle from \"../../../../Configs/Style/ProfileStyle\";\nexport default function Address(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      first_name = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      last_name = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      home = _useState10[0],\n      setHome = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      area = _useState12[0],\n      setArea = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      city = _useState14[0],\n      setCity = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      landmark = _useState16[0],\n      setLandmark = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      state = _useState18[0],\n      setState = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      addressType = _useState20[0],\n      setAddressType = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      zip = _useState22[0],\n      setZip = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      first_namelog = _useState24[0],\n      setFirstNameLog = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      last_namelog = _useState26[0],\n      setLastNameLog = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      phonelog = _useState28[0],\n      setPhoneLog = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      emaillog = _useState30[0],\n      setEmailLog = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      homelog = _useState32[0],\n      setHomeLog = _useState32[1];\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      arealog = _useState34[0],\n      setAreaLog = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      landmarklog = _useState36[0],\n      setLandmarkLog = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      citylog = _useState38[0],\n      setCityLog = _useState38[1];\n\n  var _useState39 = useState(\"\"),\n      _useState40 = _slicedToArray(_useState39, 2),\n      ziplog = _useState40[0],\n      setZipLog = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      _useState42 = _slicedToArray(_useState41, 2),\n      statelog = _useState42[0],\n      setStateLog = _useState42[1];\n\n  var _useState43 = useState(\"\"),\n      _useState44 = _slicedToArray(_useState43, 2),\n      addressTypelog = _useState44[0],\n      setAddressTypeLog = _useState44[1];\n\n  var user_Data = {\n    first_name: first_name,\n    last_name: last_name,\n    phone: phone,\n    email: email,\n    home: home,\n    area: area,\n    city: city,\n    landmark: landmark,\n    state: state,\n    addressType: addressType,\n    zip: zip\n  };\n  var log_Setters = {\n    setFirstNameLog: setFirstNameLog,\n    setLastNameLog: setLastNameLog,\n    setPhoneLog: setPhoneLog,\n    setEmailLog: setEmailLog,\n    setHomeLog: setHomeLog,\n    setAreaLog: setAreaLog,\n    setCityLog: setCityLog,\n    setLandmarkLog: setLandmarkLog,\n    setStateLog: setStateLog,\n    setAddressTypeLog: setAddressTypeLog,\n    setZipLog: setZipLog\n  };\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"First Name\"), React.createElement(TextInput, {\n    multiline: true,\n    name: \"first_name\",\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, first_namelog)), React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), React.createElement(TextInput, {\n    multiline: true,\n    name: \"last_name\",\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, last_namelog))), React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Phone\"), React.createElement(TextInput, {\n    multiline: true,\n    name: \"phone\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, phonelog)), React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    multiline: true,\n    name: \"email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, emaillog))), React.createElement(View, {\n    style: AddressStyle.SingleAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Flat, House no., Building, Company, Apartment\"), React.createElement(TextInput, {\n    name: \"address\",\n    onChangeText: function onChangeText(text) {\n      return setHome(text);\n    },\n    style: AddressStyle.Text,\n    multiline: true,\n    returnKeyType: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, homelog))), React.createElement(View, {\n    style: AddressStyle.SingleAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \"Area, Colony, Street, Sector, Village\"), React.createElement(TextInput, {\n    name: \"address\",\n    onChangeText: function onChangeText(text) {\n      return setArea(text);\n    },\n    style: AddressStyle.Text,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, arealog))), React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Landmark\"), React.createElement(TextInput, {\n    name: \"landmark\",\n    onChangeText: function onChangeText(text) {\n      return setLandmark(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, landmarklog)), React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, \"Town/City\"), React.createElement(TextInput, {\n    name: \"city\",\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, citylog))), React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, \"PIN code\"), React.createElement(TextInput, {\n    name: \"zip\",\n    onChangeText: function onChangeText(text) {\n      return setZip(text);\n    },\n    style: AddressStyle.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, ziplog)), React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, \"State / Province / Region\"), React.createElement(Picker, {\n    selectedValue: state,\n    style: [AddressStyle.state, AddressStyle.Text],\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setState(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select state\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"ANDAMAN & NICOBAR ISLANDS\",\n    value: \"ANDAMAN & NICOBAR ISLANDS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"ANDHRA PRADESH\",\n    value: \"ANDHRA PRADESH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"ARUNACHAL PRADESH\",\n    value: \"ARUNACHAL PRADESH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  })), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, statelog))), React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: AddressStyle.addresscol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.addresslabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Address Type\"), React.createElement(Picker, {\n    selectedValue: addressType,\n    style: [AddressStyle.state, AddressStyle.Text],\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setAddressType(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select an address type\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Home/Residence ( 7am - 9pm delivery )\",\n    value: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Office/Commercial ( 10am - 6pm delivery )\",\n    value: \"Office\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  })), React.createElement(Text, {\n    style: AddressStyle.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, addressTypelog))), React.createElement(View, {\n    style: AddressStyle.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [AddressStyle.button],\n    onPress: function onPress() {\n      return submit(user_Data, log_Setters);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: AddressStyle.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Save Address\"))))));\n}\n\nfunction validation(values) {\n  var result = {};\n  result.is_error = false;\n  var phone_pattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n  var email_pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  if (values.first_name === \"\") {\n    result.is_error = true;\n    result.first_name = \"First name is required\";\n  }\n\n  if (values.last_name === \"\") {\n    result.is_error = true;\n    result.last_name = \"Last name is required\";\n  }\n\n  if (values.phone === \"\") {\n    result.is_error = true;\n    result.phone = \"Phone is required\";\n  }\n\n  if (values.email === \"\") {\n    result.is_error = true;\n    result.email = \"Email is required\";\n  }\n\n  if (values.email !== \"\" && !email_pattern.test(values.email)) {\n    result.is_error = true;\n    result.email = \"Email is not valid\";\n  }\n\n  if (values.phone !== \"\" && !phone_pattern.test(values.phone)) {\n    result.is_error = true;\n    result.phone = \"Phone number is not valid\";\n  }\n\n  if (values.home === \"\") {\n    result.is_error = true;\n    result.home = \"Field required\";\n  }\n\n  if (values.area === \"\") {\n    result.is_error = true;\n    result.area = \"Field required\";\n  }\n\n  if (values.city === \"\") {\n    result.is_error = true;\n    result.city = \"City is required\";\n  }\n\n  if (values.zip === \"\") {\n    result.is_error = true;\n    result.zip = \"Pincode is required\";\n  }\n\n  if (values.state === \"\") {\n    result.is_error = true;\n    result.state = \"State is required\";\n  }\n\n  if (values.addressType === \"\") {\n    result.is_error = true;\n    result.addressType = \"Address type is required\";\n  }\n\n  if (values.landmark === \"\") {\n    result.is_error = true;\n    result.landmark = \"Landmark is required\";\n  }\n\n  return result;\n}\n\nfunction submit(user_Data, log_Setters) {\n  var result = validation(user_Data);\n\n  if (result.is_error) {\n    log_Setters.setAreaLog(result.area);\n    log_Setters.setAddressTypeLog(result.addressType);\n    log_Setters.setCityLog(result.city);\n    log_Setters.setEmailLog(result.email);\n    log_Setters.setFirstNameLog(result.first_name);\n    log_Setters.setHomeLog(result.home);\n    log_Setters.setLandmarkLog(result.landmark);\n    log_Setters.setLastNameLog(result.last_name);\n    log_Setters.setPhoneLog(result.phone);\n    log_Setters.setStateLog(result.state);\n    log_Setters.setZipLog(result.zip);\n  } else {\n    log_Setters.setAreaLog(\"\");\n    log_Setters.setAddressTypeLog(\"\");\n    log_Setters.setCityLog(\"\");\n    log_Setters.setEmailLog(\"\");\n    log_Setters.setFirstNameLog(\"\");\n    log_Setters.setHomeLog(\"\");\n    log_Setters.setLandmarkLog(\"\");\n    log_Setters.setLastNameLog(\"\");\n    log_Setters.setPhoneLog(\"\");\n    log_Setters.setStateLog(\"\");\n    log_Setters.setZipLog(\"\");\n    console.log(\"success\");\n  }\n}","map":{"version":3,"sources":["C:/Users/PyRex/Desktop/TtIT frontend/frontend/APP/android/components/Screens/Profile/Address.jsx"],"names":["React","useState","Colors","AddressStyle","ProfileStyle","Address","navigation","first_name","setFirstName","last_name","setLastName","phone","setPhone","email","setEmail","home","setHome","area","setArea","city","setCity","landmark","setLandmark","state","setState","addressType","setAddressType","zip","setZip","first_namelog","setFirstNameLog","last_namelog","setLastNameLog","phonelog","setPhoneLog","emaillog","setEmailLog","homelog","setHomeLog","arealog","setAreaLog","landmarklog","setLandmarkLog","citylog","setCityLog","ziplog","setZipLog","statelog","setStateLog","addressTypelog","setAddressTypeLog","user_Data","log_Setters","container","address","addresscol","addresslabel","text","Text","errors","SingleAddress","itemValue","itemIndex","button","submit","buttonText","validation","values","result","is_error","phone_pattern","email_pattern","test","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, TextInput, Picker, TouchableOpacity, SafeAreaView, ScrollView } from \"react-native\";\r\n\r\nimport Colors from '../../../../Configs/Colors/Colors';\r\nimport AddressStyle from '../../../../Configs/Style/AddressStyle';\r\nimport ProfileStyle from '../../../../Configs/Style/ProfileStyle';\r\n\r\nexport default function Address({ navigation }) {\r\n    let [first_name, setFirstName] = useState(\"\");\r\n    let [last_name, setLastName] = useState(\"\");\r\n    let [phone, setPhone] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [home, setHome] = useState(\"\");\r\n    let [area, setArea] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [landmark, setLandmark] = useState(\"\");\r\n    let [state, setState] = useState(\"\");\r\n    let [addressType, setAddressType] = useState(\"\");\r\n    let [zip, setZip] = useState(\"\");\r\n\r\n    let [first_namelog, setFirstNameLog] = useState(\"\");\r\n    let [last_namelog, setLastNameLog] = useState(\"\");\r\n    let [phonelog, setPhoneLog] = useState(\"\");\r\n    let [emaillog, setEmailLog] = useState(\"\");\r\n    let [homelog, setHomeLog] = useState(\"\");\r\n    let [arealog, setAreaLog] = useState(\"\");\r\n    let [landmarklog, setLandmarkLog] = useState(\"\");\r\n    let [citylog, setCityLog] = useState(\"\");\r\n    let [ziplog, setZipLog] = useState(\"\");\r\n    let [statelog, setStateLog] = useState(\"\");\r\n    let [addressTypelog, setAddressTypeLog] = useState(\"\");\r\n\r\n\r\n    let user_Data = {\r\n        first_name,\r\n        last_name,\r\n        phone,\r\n        email,\r\n        home,\r\n        area,\r\n        city,\r\n        landmark,\r\n        state,\r\n        addressType,\r\n        zip\r\n\r\n    };\r\n\r\n    let log_Setters = {\r\n        setFirstNameLog,\r\n        setLastNameLog,\r\n        setPhoneLog,\r\n        setEmailLog,\r\n        setHomeLog,\r\n        setAreaLog,\r\n        setCityLog,\r\n        setLandmarkLog,\r\n        setStateLog,\r\n        setAddressTypeLog,\r\n        setZipLog\r\n\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <View style={AddressStyle.container}>\r\n                <ScrollView>\r\n                    {/* //! --------------------------name---------------------------- */}\r\n                    <View style={AddressStyle.address}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>First Name</Text>\r\n                            <TextInput\r\n                                multiline={true} name='first_name'\r\n                                onChangeText={text => setFirstName(text)}\r\n                                style={AddressStyle.Text}\r\n                            />\r\n                            <Text style={AddressStyle.errors}>{first_namelog}</Text>\r\n                        </View>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Last Name</Text>\r\n                            <TextInput\r\n                                multiline={true} name='last_name'\r\n                                onChangeText={text => setLastName(text)}\r\n                                style={AddressStyle.Text} />\r\n                            <Text style={AddressStyle.errors}>{last_namelog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* //! --------------------------email/phone---------------------------- */}\r\n                    <View style={AddressStyle.address}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Phone</Text>\r\n                            <TextInput\r\n                                multiline={true} name='phone'\r\n                                onChangeText={text => setPhone(text)}\r\n                                style={AddressStyle.Text}\r\n                            />\r\n                            <Text style={AddressStyle.errors}>{phonelog}</Text>\r\n                        </View>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Email</Text>\r\n                            <TextInput\r\n                                multiline={true} name='email'\r\n                                onChangeText={text => setEmail(text)}\r\n                                style={AddressStyle.Text} />\r\n                            <Text style={AddressStyle.errors}>{emaillog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* //! --------------------------home/area------------------------------------ */}\r\n                    <View style={AddressStyle.SingleAddress}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Flat, House no., Building, Company, Apartment</Text>\r\n                            <TextInput\r\n                                name='address'\r\n                                onChangeText={text => setHome(text)}\r\n                                style={AddressStyle.Text}\r\n                                multiline={true}\r\n                                returnKeyType=\"next\"\r\n                            />\r\n                            <Text style={AddressStyle.errors}>{homelog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={AddressStyle.SingleAddress}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Area, Colony, Street, Sector, Village</Text>\r\n                            <TextInput\r\n                                name='address'\r\n                                onChangeText={text => setArea(text)}\r\n                                style={AddressStyle.Text}\r\n                                multiline={true}\r\n                            />\r\n                            <Text style={AddressStyle.errors}>{arealog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* //!--------------------------landmark/town---------------------------- */}\r\n                    <View style={AddressStyle.address}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Landmark</Text>\r\n                            <TextInput\r\n                                name='landmark'\r\n                                onChangeText={text => setLandmark(text)}\r\n                                style={AddressStyle.Text}\r\n                            />\r\n                            <Text style={AddressStyle.errors}>{landmarklog}</Text>\r\n                        </View>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Town/City</Text>\r\n                            <TextInput\r\n                                name='city'\r\n                                onChangeText={text => setCity(text)}\r\n                                style={AddressStyle.Text} />\r\n                            <Text style={AddressStyle.errors}>{citylog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* //!--------------------------state/pincode---------------------------- */}\r\n                    <View style={AddressStyle.address}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>PIN code</Text>\r\n                            <TextInput\r\n                                name='zip'\r\n                                onChangeText={text => setZip(text)}\r\n                                style={AddressStyle.Text} />\r\n                            <Text style={AddressStyle.errors}>{ziplog}</Text>\r\n                        </View>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>State / Province / Region</Text>\r\n                            <Picker\r\n                                selectedValue={state}\r\n                                style={[AddressStyle.state, AddressStyle.Text]}\r\n                                onValueChange={(itemValue, itemIndex) =>\r\n                                    setState(itemValue)\r\n                                }\r\n                            >\r\n                                <Picker.Item label='Select state' value='' />\r\n                                <Picker.Item label='ANDAMAN & NICOBAR ISLANDS' value='ANDAMAN & NICOBAR ISLANDS' />\r\n                                <Picker.Item label='ANDHRA PRADESH' value='ANDHRA PRADESH' />\r\n                                <Picker.Item label='ARUNACHAL PRADESH' value='ARUNACHAL PRADESH' />\r\n                            </Picker>\r\n                            <Text style={AddressStyle.errors}>{statelog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* //! --------------------------address types---------------------------- */}\r\n                    <View style={AddressStyle.address}>\r\n                        <View style={AddressStyle.addresscol}>\r\n                            <Text style={AddressStyle.addresslabel}>Address Type</Text>\r\n                            <Picker\r\n                                selectedValue={addressType}\r\n                                style={[AddressStyle.state, AddressStyle.Text]}\r\n                                onValueChange={(itemValue, itemIndex) =>\r\n                                    setAddressType(itemValue)\r\n                                }\r\n                            >\r\n                                <Picker.Item label='Select an address type' value='' />\r\n                                <Picker.Item label='Home/Residence ( 7am - 9pm delivery )' value='Home' />\r\n                                <Picker.Item label='Office/Commercial ( 10am - 6pm delivery )' value='Office' />\r\n                            </Picker>\r\n                            <Text style={AddressStyle.errors}>{addressTypelog}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={AddressStyle.address}>\r\n                        <TouchableOpacity style={[AddressStyle.button]} onPress={() => submit(user_Data, log_Setters)} >\r\n                            <Text style={AddressStyle.buttonText}\r\n                            >Save Address</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </SafeAreaView>\r\n    );\r\n}\r\nfunction validation(values) {\r\n    let result = {};\r\n    result.is_error = false;\r\n    let phone_pattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\n    let email_pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (values.first_name === \"\") {\r\n        result.is_error = true;\r\n        result.first_name = \"First name is required\";\r\n    }\r\n    if (values.last_name === \"\") {\r\n        result.is_error = true;\r\n        result.last_name = \"Last name is required\";\r\n    }\r\n    if (values.phone === \"\") {\r\n        result.is_error = true;\r\n        result.phone = \"Phone is required\";\r\n    }\r\n    if (values.email === \"\") {\r\n        result.is_error = true;\r\n        result.email = \"Email is required\";\r\n    }\r\n    if (values.email !== \"\" && !email_pattern.test(values.email)) {\r\n        result.is_error = true;\r\n        result.email = \"Email is not valid\";\r\n    }\r\n    if (values.phone !== \"\" && !phone_pattern.test(values.phone)) {\r\n        result.is_error = true;\r\n        result.phone = \"Phone number is not valid\";\r\n    }\r\n    if (values.home === \"\") {\r\n        result.is_error = true;\r\n        result.home = \"Field required\";\r\n    }\r\n    if (values.area === \"\") {\r\n\r\n        result.is_error = true;\r\n        result.area = \"Field required\";\r\n    }\r\n    if (values.city === \"\") {\r\n        result.is_error = true;\r\n        result.city = \"City is required\";\r\n    }\r\n    if (values.zip === \"\") {\r\n        result.is_error = true;\r\n        result.zip = \"Pincode is required\";\r\n    }\r\n    if (values.state === \"\") {\r\n        result.is_error = true;\r\n        result.state = \"State is required\";\r\n    }\r\n    if (values.addressType === \"\") {\r\n        result.is_error = true;\r\n        result.addressType = \"Address type is required\";\r\n    }\r\n    if (values.landmark === \"\") {\r\n        result.is_error = true;\r\n        result.landmark = \"Landmark is required\";\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction submit(user_Data, log_Setters) {\r\n    let result = validation(user_Data);\r\n    if (result.is_error) {\r\n        log_Setters.setAreaLog(result.area);\r\n        log_Setters.setAddressTypeLog(result.addressType);\r\n        log_Setters.setCityLog(result.city);\r\n        log_Setters.setEmailLog(result.email);\r\n        log_Setters.setFirstNameLog(result.first_name);\r\n        log_Setters.setHomeLog(result.home);\r\n        log_Setters.setLandmarkLog(result.landmark);\r\n        log_Setters.setLastNameLog(result.last_name);\r\n        log_Setters.setPhoneLog(result.phone);\r\n        log_Setters.setStateLog(result.state);\r\n        log_Setters.setZipLog(result.zip);\r\n\r\n    } else {\r\n        log_Setters.setAreaLog(\"\");\r\n        log_Setters.setAddressTypeLog(\"\");\r\n        log_Setters.setCityLog(\"\");\r\n        log_Setters.setEmailLog(\"\");\r\n        log_Setters.setFirstNameLog(\"\");\r\n        log_Setters.setHomeLog(\"\");\r\n        log_Setters.setLandmarkLog(\"\");\r\n        log_Setters.setLastNameLog(\"\");\r\n        log_Setters.setPhoneLog(\"\");\r\n        log_Setters.setStateLog(\"\");\r\n        log_Setters.setZipLog(\"\");\r\n        console.log(\"success\");\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}