{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PyRex\\\\Desktop\\\\TtIT frontend\\\\frontend\\\\APP\\\\android\\\\components\\\\Sub Components\\\\Button.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Colors from \"../../../Configs/Colors/Colors\";\n\nvar PrimaryButton = function PrimaryButton(_ref) {\n  var title = _ref.title,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: style.btnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: style.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, title)));\n};\n\nvar SecondaryButton = function SecondaryButton(_ref2) {\n  var title = _ref2.title,\n      _ref2$onPress = _ref2.onPress,\n      onPress = _ref2$onPress === void 0 ? function () {} : _ref2$onPress;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, style.btnContainer), {}, {\n      backgroundColor: Colors.white\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, style.title), {}, {\n      color: Colors.primary\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, title)));\n};\n\nvar style = StyleSheet.create({\n  title: {\n    color: Colors.white,\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  btnContainer: {\n    backgroundColor: Colors.primary,\n    height: 61,\n    borderRadius: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport { PrimaryButton, SecondaryButton };","map":{"version":3,"sources":["C:/Users/PyRex/Desktop/TtIT frontend/frontend/APP/android/components/Sub Components/Button.jsx"],"names":["React","Colors","PrimaryButton","title","onPress","style","btnContainer","SecondaryButton","backgroundColor","white","color","primary","StyleSheet","create","fontWeight","fontSize","height","borderRadius","justifyContent","alignItems"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,OAAOC,MAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmC;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,0BAAzBC,OAAyB;AAAA,MAAzBA,OAAyB,6BAAf,YAAM,CAAE,CAAO;AACxD,SACC,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAEA,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,KAAK,CAACC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,KAAK,CAACF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,KAA3B,CADD,CADD,CADD;AAOA,CARD;;AASA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,QAAmC;AAAA,MAAhCJ,KAAgC,SAAhCA,KAAgC;AAAA,4BAAzBC,OAAyB;AAAA,MAAzBA,OAAyB,8BAAf,YAAM,CAAE,CAAO;AAC1D,SACC,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAEA,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AACC,IAAA,KAAK,kCAAOC,KAAK,CAACC,YAAb;AAA2BE,MAAAA,eAAe,EAAEP,MAAM,CAACQ;AAAnD,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOJ,KAAK,CAACF,KAAb;AAAoBO,MAAAA,KAAK,EAAET,MAAM,CAACU;AAAlC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,KADF,CAHD,CADD,CADD;AAWA,CAZD;;AAcA,IAAME,KAAK,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,KAAK,EAAE;AAAEO,IAAAA,KAAK,EAAET,MAAM,CAACQ,KAAhB;AAAuBK,IAAAA,UAAU,EAAE,MAAnC;AAA2CC,IAAAA,QAAQ,EAAE;AAArD,GADwB;AAE/BT,EAAAA,YAAY,EAAE;AACbE,IAAAA,eAAe,EAAEP,MAAM,CAACU,OADX;AAEbK,IAAAA,MAAM,EAAE,EAFK;AAGbC,IAAAA,YAAY,EAAE,EAHD;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,UAAU,EAAE;AALC;AAFiB,CAAlB,CAAd;AAWA,SAASjB,aAAT,EAAwBK,eAAxB","sourcesContent":["import React from \"react\";\r\nimport {\r\n\tStyleSheet,\r\n\tTouchableOpacity,\r\n\tView,\r\n\tText,\r\n\tAppRegistry,\r\n\tPlatform,\r\n} from \"react-native\";\r\nimport Colors from \"../../../Configs/Colors/Colors\";\r\n\r\nconst PrimaryButton = ({ title, onPress = () => {} }) => {\r\n\treturn (\r\n\t\t<TouchableOpacity activeOpacity={0.8} onPress={onPress}>\r\n\t\t\t<View style={style.btnContainer}>\r\n\t\t\t\t<Text style={style.title}>{title}</Text>\r\n\t\t\t</View>\r\n\t\t</TouchableOpacity>\r\n\t);\r\n};\r\nconst SecondaryButton = ({ title, onPress = () => {} }) => {\r\n\treturn (\r\n\t\t<TouchableOpacity activeOpacity={0.8} onPress={onPress}>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{ ...style.btnContainer, backgroundColor: Colors.white }}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ ...style.title, color: Colors.primary }}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t</TouchableOpacity>\r\n\t);\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n\ttitle: { color: Colors.white, fontWeight: \"bold\", fontSize: 18 },\r\n\tbtnContainer: {\r\n\t\tbackgroundColor: Colors.primary,\r\n\t\theight: 61,\r\n\t\tborderRadius: 30,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n});\r\n\r\nexport { PrimaryButton, SecondaryButton };\r\n"]},"metadata":{},"sourceType":"module"}